join mohammed right
[voice path="res://Sonidos/voices/clase_2/1.wav" volume="0.0"]
mohammed: ¡Hola! Bienvenido a este espacio donde la lógica y la creatividad se encuentran.\
Me presento\: soy el Profesor Mohammed Al-Karim,\
y seré tu guía en el mundo apasionante de la computación.
[voice path="res://Sonidos/voices/clase_2/2.wav" volume="0.0"]
mohammed: Chicos. El día de hoy responderemos a la siguiente pregunta\: ¿Qué son los paradigmas de la programación?
[voice path="res://Sonidos/voices/clase_2/3.wav" volume="0.0"]
mohammed: Primero debemos saber que no existe un solo modo de escribir un programa. A lo largo del tiempo se han desarrollado distintas formas de organizar y estructurar el código.\
A esto se le llama paradigma de la programación.
[voice path="res://Sonidos/voices/clase_2/4.wav" volume="0.0"]
mohammed: Existen muchos tipos de paradigmas, pero hoy hablaremos de los más importantes y utilizados.
[voice path="res://Sonidos/voices/clase_2/5.wav" volume="0.0"]
mohammed: En esta clase nos enfocaremos en cuatro paradigmas fundamentales\: El paradigma imperativo, el paradigma procedimental, el paradigma orientado a objetos y el paradigma funcional.
[voice path="res://Sonidos/voices/clase_2/6.wav" volume="0.0"]
mohammed: El paradigma imperativo es cuando le damos a la máquina instrucciones paso a paso, ejecutadas de arriba hacia abajo. Es decir, le decimos exactamente qué hacer en cada línea del programa, en el orden en que deben ocurrir las acciones.
[voice path="res://Sonidos/voices/clase_2/7.wav" volume="0.0"]
mohammed: Este método es fácil de entender en programas cortos, pero cuando el código se vuelve más largo, puede volverse difícil de mantener y entender, ya que hay muchas líneas consecutivas que dependen unas de otras.
[voice path="res://Sonidos/voices/clase_2/8.wav" volume="0.0"]
mohammed: El paradigma procedimental es muy parecido al paradigma imperativo.\
La diferencia es que el paradigma procedimental permite definir instrucciones en bloques separados llamados funciones, los cuales pueden ser reutilizados múltiples veces en el código.
[voice path="res://Sonidos/voices/clase_2/9.wav" volume="0.0"]
mohammed: Este método ayuda a reducir considerablemente la cantidad de líneas escritas, ya que evita repetir código. Sin embargo, cuando el programa es muy complejo, también puede volverse difícil de entender.
[voice path="res://Sonidos/voices/clase_2/10.wav" volume="0.0"]
mohammed: Ahora hablaremos del paradigma orientado a objetos, uno de los más usados hoy en día.
[voice path="res://Sonidos/voices/clase_2/11.wav" volume="0.0"]
mohammed: A diferencia del paradigma imperativo o procedimental, donde el código se organiza en funciones o instrucciones paso a paso, en el paradigma orientado a objetos el código se organiza en objetos.
[voice path="res://Sonidos/voices/clase_2/12.wav" volume="0.0"]
mohammed: Un objeto contiene dos cosas principales\: atributos y métodos.\
Los atributos son datos que el objeto tendrá, como por ejemplo el nombre de una persona, su DNI o su peso.
[voice path="res://Sonidos/voices/clase_2/13.wav" volume="0.0"]
mohammed: Los métodos son funciones que pueden usar estos atributos; por ejemplo, que la persona se presente diciendo cuál es su peso.
[voice path="res://Sonidos/voices/clase_2/14.wav" volume="0.0"]
mohammed: Este tema se llama Programación Orientada a Objetos (POO), y lo estudiaremos más a fondo en clases posteriores.
[voice path="res://Sonidos/voices/clase_2/15.wav" volume="0.0"]
mohammed: Este paradigma es el más completo y adecuado para programas grandes y complejos, pero suele ser difícil de entender si recién estás empezando a programar.\
Por lo tanto, se recomienda aprender primero uno de los paradigmas anteriores.
[voice path="res://Sonidos/voices/clase_2/16.wav" volume="0.0"]
mohammed: Y por último, el paradigma funcional es un método de programación que se enfoca en el uso intensivo de funciones. Es decir, todo se puede simplificar a una función. Además, se utilizan datos inmutables, lo que significa que, en lugar de modificar un dato existente, se prefiere crear un nuevo dato con el valor actualizado de un dato antes de cambiar este.
[voice path="res://Sonidos/voices/clase_2/17.wav" volume="0.0"]
Bueno, chicos, la clase de hoy fue corta. Espero que hayan entendido todo. Nos vemos en la siguiente clase.
